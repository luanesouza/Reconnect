{"ast":null,"code":"import _regeneratorRuntime from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/luanesouza/projectFour/reconnect_client_side/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport './App.css';\nimport UserRegisterForm from './components/UserRegisterForm';\nimport { registerUser, loginUser } from './services/users';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      user: '',\n      token: '',\n      formData: {\n        user_first_name: '',\n        user_last_name: '',\n        user_email: '',\n        password: ''\n      }\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRegister = _this.handleRegister.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleLogout\",\n    value: function handleLogout(e) {\n      e.preventDefault();\n      this.setState({\n        user: '',\n        token: '',\n        formData: {\n          user_first_name: '',\n          user_last_name: '',\n          user_email: '',\n          password: ''\n        }\n      });\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(function (prevState) {\n        return {\n          formData: _objectSpread({}, prevState.formData, _defineProperty({}, name, value))\n        };\n      });\n    }\n  }, {\n    key: \"handleRegister\",\n    value: function () {\n      var _handleRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ev) {\n        var _this$state$formData, user_first_name, user_last_name, user_email, password, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ev.preventDefault();\n                _this$state$formData = this.state.formData, user_first_name = _this$state$formData.user_first_name, user_last_name = _this$state$formData.user_last_name, user_email = _this$state$formData.user_email, password = _this$state$formData.password;\n\n                if (!(user_first_name && user_last_name && user_email && password)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.prev = 3;\n                _context.next = 6;\n                return registerUser(this.state.formData);\n\n              case 6:\n                data = _context.sent;\n                console.log(data);\n                this.setState({\n                  user: data.user,\n                  token: data.token,\n                  formData: {\n                    user_first_name: '',\n                    user_last_name: '',\n                    user_email: '',\n                    password: ''\n                  }\n                });\n                this.props.history.push(\"/profile\");\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0, 'Something went wrong...');\n\n              case 15:\n                _context.next = 18;\n                break;\n\n              case 17:\n                console.log('please fill out form'); // logic works to not allow partially filled out forms to dispatch server call\n                // need to know conditional render \"please fill out form\" as html if failure\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n\n      function handleRegister(_x) {\n        return _handleRegister.apply(this, arguments);\n      }\n\n      return handleRegister;\n    }()\n  }, {\n    key: \"handleLogin\",\n    value: function () {\n      var _handleLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(ev) {\n        var _this$state$formData2, user_email, password, resp;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ev.preventDefault();\n                _this$state$formData2 = this.state.formData, user_email = _this$state$formData2.user_email, password = _this$state$formData2.password;\n\n                if (!(user_email && password)) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return loginUser(this.state.formData);\n\n              case 6:\n                resp = _context2.sent;\n\n                if (resp) {\n                  console.log(resp);\n                  this.setState({\n                    user: resp.user,\n                    token: resp.token,\n                    formData: {\n                      user_email: '',\n                      password: ''\n                    }\n                  });\n                  this.props.history.push(\"/festival\");\n                } else {\n                  console.log('wrong username or password'); // this needs user prompt so they can understand why login failed\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.log(_context2.t0, 'Someting went wrong...');\n\n              case 13:\n                _context2.next = 16;\n                break;\n\n              case 15:\n                console.log('please put both a username and password');\n\n              case 16:\n                ;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 10]]);\n      }));\n\n      function handleLogin(_x2) {\n        return _handleLogin.apply(this, arguments);\n      }\n\n      return handleLogin;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" Reconnect \"), React.createElement(RegisterForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/luanesouza/projectFour/reconnect_client_side/src/App.js"],"names":["React","Component","Route","withRouter","UserRegisterForm","registerUser","loginUser","App","state","user","token","formData","user_first_name","user_last_name","user_email","password","handleLogin","bind","handleChange","handleRegister","handleLogout","e","preventDefault","setState","props","history","push","target","name","value","prevState","ev","data","console","log","resp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport './App.css';\nimport UserRegisterForm from './components/UserRegisterForm';\nimport { registerUser, loginUser } from './services/users';\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    this.state = {\n      user: '',\n      token: '',\n      formData: {\n        user_first_name: '',\n        user_last_name: '',\n        user_email: '',\n        password: ''\n      }\n    }\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleRegister = this.handleRegister.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogout(e) {\n  e.preventDefault();\n  this.setState({\n    user: '',\n    token: '',\n    formData: {\n      user_first_name: '',\n      user_last_name: '',\n      user_email: '',\n      password: ''\n    }\n  })\n  this.props.history.push('/');\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target\n    this.setState(prevState => ({\n    formData: {\n        ...prevState.formData,\n        [name]: value\n      }\n    }));\n  }\n\n  async handleRegister(ev) {\n    ev.preventDefault();\n    const { user_first_name, user_last_name, user_email, password } = this.state.formData\n    if ( user_first_name && user_last_name && user_email && password ) {\n      try {\n        const data = await registerUser(this.state.formData);\n        console.log(data);\n        this.setState({\n          user: data.user,\n          token: data.token,\n          formData: {\n            user_first_name: '',\n            user_last_name: '',\n            user_email: '',\n            password: ''\n          }\n        })\n        this.props.history.push(`/profile`);\n      } catch (e) {\n        console.log(e, 'Something went wrong...');\n      }\n    } else {\n      console.log('please fill out form');\n      // logic works to not allow partially filled out forms to dispatch server call\n      // need to know conditional render \"please fill out form\" as html if failure\n    }\n  };\n\n  async handleLogin(ev) {\n    ev.preventDefault();\n    const { user_email, password } = this.state.formData;\n    if (user_email && password) {\n      try {\n        const resp = await loginUser(this.state.formData)\n        if(resp) {\n          console.log(resp);\n          this.setState({\n            user: resp.user,\n            token: resp.token,\n            formData: {\n              user_email: '',\n              password:''\n            }\n          })\n          this.props.history.push(`/festival`);\n        } else {\n          console.log('wrong username or password');\n          // this needs user prompt so they can understand why login failed\n        }\n      } catch(e) {\n        console.log(e, 'Someting went wrong...');\n      }\n    } else {\n      console.log('please put both a username and password');\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1> Reconnect </h1>\n        <RegisterForm />\n      </div>\n    );\n  }\n}\n\nexport default withRouter (App);\n"]},"metadata":{},"sourceType":"module"}