{"ast":null,"code":"import _objectSpread from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/luanesouza/projectFour/reconnect_client_side/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/luanesouza/projectFour/reconnect_client_side/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport './App.css';\nimport UserRegisterForm from './components/UserRegisterForm';\nimport UserLoginForm from './components/UserLoginForm';\nimport { registerUser, loginUser, getTherapists, getOneTherapist, getUserAppointments, createUserAppointment, editUserAppointment, deleteUserAppointment } from './services/users';\nimport UserProfile from './components/UserProfile';\nimport TherapistList from './components/TherapistList';\nimport TherapistProfile from './components/TherapistProfile';\nimport Modal from './components/Modal';\nimport AppointmentForm from './components/AppointmentForm';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      therapist: '',\n      appointments: [],\n      therapists: [],\n      date: new Date(),\n      time: '',\n      therapist_id: '',\n      therapist_image: '',\n      therapist_last_name: '',\n      therapist_first_name: '',\n      user_id: 1,\n      user_first_name: '',\n      user_last_name: '',\n      user_email: '',\n      password: '',\n      modalOpen: false,\n      modalAppointment: false\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRegister = _this.handleRegister.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAppointments = _this.getAppointments.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllTherapists = _this.getAllTherapists.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTherapist = _this.getTherapist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createAppointment = _this.createAppointment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rescheduleAppointment = _this.rescheduleAppointment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getInfoAppointment = _this.getInfoAppointment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cancelAppointment = _this.cancelAppointment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.populateForm = _this.populateForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCalendar = _this.handleCalendar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState(function (prevState) {\n        return {\n          modalOpen: !prevState.modalOpen\n        };\n      });\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout(e) {\n      e.preventDefault();\n      this.setState({\n        user_first_name: '',\n        user_last_name: '',\n        user_email: '',\n        password: ''\n      });\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleRegister\",\n    value: function () {\n      var _handleRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ev) {\n        var _this$state, user_first_name, user_last_name, user_email, password, newUser, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ev.preventDefault();\n                _this$state = this.state, user_first_name = _this$state.user_first_name, user_last_name = _this$state.user_last_name, user_email = _this$state.user_email, password = _this$state.password;\n\n                if (!(user_first_name && user_last_name && user_email && password)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.prev = 3;\n                newUser = {\n                  user_first_name: this.state.user_first_name,\n                  user_last_name: this.state.user_last_name,\n                  user_email: this.state.user_email,\n                  password: this.state.password\n                };\n                _context.next = 7;\n                return registerUser(newUser);\n\n              case 7:\n                data = _context.sent;\n                console.log(this.state);\n                console.log(data);\n                this.setState({\n                  user_first_name: '',\n                  user_last_name: '',\n                  user_email: '',\n                  password: ''\n                });\n                this.props.history.push(\"/profile\");\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0, 'Something went wrong...');\n\n              case 17:\n                _context.next = 20;\n                break;\n\n              case 19:\n                console.log('please fill out form'); // logic works to not allow partially filled out forms to dispatch server call\n                // need to know conditional render \"please fill out form\" as html if failure\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 14]]);\n      }));\n\n      function handleRegister(_x) {\n        return _handleRegister.apply(this, arguments);\n      }\n\n      return handleRegister;\n    }()\n  }, {\n    key: \"handleLogin\",\n    value: function () {\n      var _handleLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(ev) {\n        var _this$state2, user_email, password, resp;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ev.preventDefault();\n                _this$state2 = this.state, user_email = _this$state2.user_email, password = _this$state2.password;\n\n                if (!(user_email && password)) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return loginUser(this.state);\n\n              case 6:\n                resp = _context2.sent;\n\n                if (resp) {\n                  console.log(resp);\n                  this.setState({\n                    user_email: '',\n                    password: ''\n                  });\n                  this.props.history.push(\"/profile\");\n                } else {\n                  console.log('wrong username or password'); // this needs user prompt so they can understand why login failed\n                }\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.log(_context2.t0, 'Someting went wrong...');\n\n              case 13:\n                _context2.next = 16;\n                break;\n\n              case 15:\n                console.log('please put both a username and password');\n\n              case 16:\n                ;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 10]]);\n      }));\n\n      function handleLogin(_x2) {\n        return _handleLogin.apply(this, arguments);\n      }\n\n      return handleLogin;\n    }()\n  }, {\n    key: \"getAppointments\",\n    value: function () {\n      var _getAppointments = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var appointments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getUserAppointments();\n\n              case 2:\n                appointments = _context3.sent;\n                console.log(appointments);\n                this.setState({\n                  appointments: appointments\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAppointments() {\n        return _getAppointments.apply(this, arguments);\n      }\n\n      return getAppointments;\n    }()\n  }, {\n    key: \"getAllTherapists\",\n    value: function () {\n      var _getAllTherapists = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var therapists;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getTherapists();\n\n              case 2:\n                therapists = _context4.sent;\n                this.setState({\n                  therapists: therapists\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAllTherapists() {\n        return _getAllTherapists.apply(this, arguments);\n      }\n\n      return getAllTherapists;\n    }()\n  }, {\n    key: \"getTherapist\",\n    value: function () {\n      var _getTherapist = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(therapistId) {\n        var therapist;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return getOneTherapist(therapistId);\n\n              case 2:\n                therapist = _context5.sent;\n                console.log(therapist);\n                this.setState({\n                  therapist: therapist,\n                  therapist_id: therapist.id,\n                  therapist_image: therapist.therapist_image,\n                  therapist_first_name: therapist.therapist_first_name,\n                  therapist_last_name: therapist.therapist_last_name\n                });\n                this.props.history.push('/therapist');\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getTherapist(_x3) {\n        return _getTherapist.apply(this, arguments);\n      }\n\n      return getTherapist;\n    }()\n  }, {\n    key: \"getInfoAppointment\",\n    value: function () {\n      var _getInfoAppointment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.setState(function (prevState) {\n                  return {\n                    modalAppointment: !prevState.modalAppointment\n                  };\n                });\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getInfoAppointment() {\n        return _getInfoAppointment.apply(this, arguments);\n      }\n\n      return getInfoAppointment;\n    }()\n  }, {\n    key: \"createAppointment\",\n    value: function () {\n      var _createAppointment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(e) {\n        var data, appointment, appointments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                e.preventDefault();\n                data = {\n                  date: this.state.date,\n                  time: this.state.time,\n                  therapist_id: this.state.therapist_id,\n                  therapist_image: this.state.therapist_image,\n                  user_id: 1,\n                  therapist_first_name: this.state.therapist_first_name,\n                  therapist_last_name: this.state.therapist_last_name\n                };\n                _context7.next = 4;\n                return createUserAppointment(data);\n\n              case 4:\n                appointment = _context7.sent;\n                this.setState({\n                  date: '',\n                  time: ''\n                });\n                this.props.history.push('/profile');\n                _context7.next = 9;\n                return getUserAppointments();\n\n              case 9:\n                appointments = _context7.sent;\n                this.setState({\n                  appointments: appointments\n                });\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function createAppointment(_x4) {\n        return _createAppointment.apply(this, arguments);\n      }\n\n      return createAppointment;\n    }()\n  }, {\n    key: \"cancelAppointment\",\n    value: function () {\n      var _cancelAppointment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(appointmentId) {\n        var resp, appointments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return deleteUserAppointment(appointmentId);\n\n              case 3:\n                resp = _context8.sent;\n                _context8.next = 6;\n                return getUserAppointments();\n\n              case 6:\n                appointments = _context8.sent;\n                this.setState({\n                  appointments: appointments\n                });\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.error(_context8.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 10]]);\n      }));\n\n      function cancelAppointment(_x5) {\n        return _cancelAppointment.apply(this, arguments);\n      }\n\n      return cancelAppointment;\n    }()\n  }, {\n    key: \"populateForm\",\n    value: function () {\n      var _populateForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(appointment) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.setState(function (prevState) {\n                  return {\n                    modalAppointment: !prevState.modalAppointment\n                  };\n                });\n                console.log(this.state.modalAppointment);\n                console.log(appointment);\n\n                try {\n                  this.setState({\n                    date: appointment.date,\n                    time: appointment.time\n                  });\n                } catch (e) {\n                  console.error(e.message);\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function populateForm(_x6) {\n        return _populateForm.apply(this, arguments);\n      }\n\n      return populateForm;\n    }()\n  }, {\n    key: \"rescheduleAppointment\",\n    value: function () {\n      var _rescheduleAppointment = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                e.preventDefault();\n                console.log('clicked, yeah babe!!!!');\n                data = {\n                  date: this.state.date,\n                  time: this.state.time\n                };\n                _context10.next = 5;\n                return editUserAppointment(data);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function rescheduleAppointment(_x7) {\n        return _rescheduleAppointment.apply(this, arguments);\n      }\n\n      return rescheduleAppointment;\n    }()\n  }, {\n    key: \"handleCalendar\",\n    value: function handleCalendar(date) {\n      this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          date: date\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.getAppointments();\n\n              case 2:\n                _context11.next = 4;\n                return this.getAllTherapists();\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            },\n            __self: this\n          }, React.createElement(UserRegisterForm, Object.assign({}, props, {\n            handleChange: _this2.handleChange,\n            handleSubmit: _this2.handleRegister,\n            first_name: _this2.state.first_name,\n            last_name: _this2.state.last_name,\n            email: _this2.state.email,\n            password: _this2.state.password,\n            closeModal: _this2.toggleModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/scheduleAppointment\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, React.createElement(AppointmentForm, Object.assign({}, props, {\n            handleChange: _this2.handleChange,\n            handleSubmit: _this2.createAppointment,\n            date: _this2.state.date,\n            time: _this2.state.time,\n            handleCalendar: _this2.handleCalendar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, React.createElement(UserLoginForm, Object.assign({}, props, {\n            handleChange: _this2.handleChange,\n            handleSubmit: _this2.handleLogin,\n            email: _this2.state.email,\n            password: _this2.state.password,\n            closeModal: _this2.toggleModal,\n            isOpen: _this2.state.modalOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/profile\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, React.createElement(UserProfile, {\n            appointments: _this2.state.appointments,\n            cancelAppointment: _this2.cancelAppointment,\n            populateForm: _this2.populateForm,\n            date: _this2.state.date,\n            time: _this2.state.time,\n            modalAppointment: _this2.state.modalAppointment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/therapists\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306\n            },\n            __self: this\n          }, React.createElement(TherapistList, {\n            getTherapist: _this2.getTherapist,\n            therapist: _this2.state.therapist,\n            therapists: _this2.state.therapists,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/therapist\",\n        render: function render(props) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }, React.createElement(TherapistProfile, {\n            therapist: _this2.state.therapist,\n            getInfoAppointment: _this2.getInfoAppointment,\n            handleChange: _this2.handleChange,\n            handleSubmit: _this2.createAppointment,\n            date: _this2.state.date,\n            time: _this2.state.time,\n            handleCalendar: _this2.handleCalendar,\n            modalAppointment: _this2.state.modalAppointment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        closeModal: this.toggleModal,\n        isOpen: this.state.modalOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/luanesouza/projectFour/reconnect_client_side/src/App.js"],"names":["React","Component","Route","withRouter","UserRegisterForm","UserLoginForm","registerUser","loginUser","getTherapists","getOneTherapist","getUserAppointments","createUserAppointment","editUserAppointment","deleteUserAppointment","UserProfile","TherapistList","TherapistProfile","Modal","AppointmentForm","App","state","therapist","appointments","therapists","date","Date","time","therapist_id","therapist_image","therapist_last_name","therapist_first_name","user_id","user_first_name","user_last_name","user_email","password","modalOpen","modalAppointment","handleLogin","bind","handleChange","handleRegister","handleLogout","getAppointments","getAllTherapists","getTherapist","toggleModal","createAppointment","rescheduleAppointment","getInfoAppointment","cancelAppointment","populateForm","handleCalendar","setState","prevState","e","preventDefault","props","history","push","target","name","value","ev","newUser","data","console","log","resp","therapistId","id","appointment","appointmentId","error","message","first_name","last_name","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport './App.css';\nimport UserRegisterForm from './components/UserRegisterForm';\nimport UserLoginForm from './components/UserLoginForm';\nimport { registerUser,\n        loginUser,\n        getTherapists,\n        getOneTherapist,\n        getUserAppointments,\n        createUserAppointment,\n        editUserAppointment,\n        deleteUserAppointment, } from './services/users';\nimport UserProfile from './components/UserProfile'\nimport TherapistList from './components/TherapistList'\nimport TherapistProfile from './components/TherapistProfile'\nimport Modal from './components/Modal';\nimport AppointmentForm from './components/AppointmentForm';\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    this.state = {\n      therapist: '',\n      appointments: [],\n      therapists: [],\n      date: new Date(),\n      time: '',\n      therapist_id:'',\n      therapist_image: '',\n      therapist_last_name: '',\n      therapist_first_name: '',\n      user_id: 1,\n      user_first_name: '',\n      user_last_name: '',\n      user_email: '',\n      password: '',\n      modalOpen: false,\n      modalAppointment: false\n    }\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleRegister = this.handleRegister.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n    this.getAppointments = this.getAppointments.bind(this)\n    this.getAllTherapists = this.getAllTherapists.bind(this)\n    this.getTherapist = this.getTherapist.bind(this)\n    this.toggleModal = this.toggleModal.bind(this);\n    this.createAppointment = this.createAppointment.bind(this);\n    this.rescheduleAppointment = this.rescheduleAppointment.bind(this);\n    this.getInfoAppointment = this.getInfoAppointment.bind(this);\n    this.cancelAppointment = this.cancelAppointment.bind(this);\n    this.populateForm = this.populateForm.bind(this);\n    this.handleCalendar = this.handleCalendar.bind(this);\n  }\n\n  toggleModal() {\n    this.setState(prevState => ({\n      modalOpen: !prevState.modalOpen\n    }));\n  }\n\n  handleLogout(e) {\n  e.preventDefault();\n  this.setState({\n      user_first_name: '',\n      user_last_name: '',\n      user_email: '',\n      password: ''\n  })\n  this.props.history.push('/');\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  async handleRegister(ev) {\n    ev.preventDefault();\n    const { user_first_name, user_last_name, user_email, password } = this.state\n    if ( user_first_name && user_last_name\n      && user_email && password ) {\n      try {\n        const newUser = {\n          user_first_name: this.state.user_first_name,\n          user_last_name: this.state.user_last_name,\n          user_email: this.state.user_email,\n          password: this.state.password\n        }\n        const data = await registerUser(newUser);\n        console.log(this.state);\n        console.log(data);\n        this.setState({\n            user_first_name: '',\n            user_last_name: '',\n            user_email: '',\n            password: ''\n        })\n        this.props.history.push(`/profile`);\n      } catch (e) {\n        console.log(e, 'Something went wrong...');\n      }\n    } else {\n      console.log('please fill out form');\n      // logic works to not allow partially filled out forms to dispatch server call\n      // need to know conditional render \"please fill out form\" as html if failure\n    }\n  };\n\n  async handleLogin(ev) {\n    ev.preventDefault();\n    const { user_email, password } = this.state;\n    if (user_email && password) {\n      try {\n        const resp = await loginUser(this.state)\n        if(resp) {\n          console.log(resp);\n          this.setState({\n              user_email: '',\n              password:''\n          })\n          this.props.history.push(`/profile`);\n        } else {\n          console.log('wrong username or password');\n          // this needs user prompt so they can understand why login failed\n        }\n      } catch(e) {\n        console.log(e, 'Someting went wrong...');\n      }\n    } else {\n      console.log('please put both a username and password');\n    };\n  };\n\n  async getAppointments(){\n    const appointments = await getUserAppointments()\n    console.log(appointments);\n\n    this.setState({\n      appointments\n    })\n  }\n\n  async getAllTherapists(){\n    const therapists = await getTherapists()\n\n    this.setState({\n      therapists\n    })\n  }\n\n  async getTherapist(therapistId){\n    const therapist = await getOneTherapist(therapistId)\n    console.log(therapist);\n    this.setState({\n      therapist,\n      therapist_id:therapist.id,\n      therapist_image: therapist.therapist_image,\n      therapist_first_name: therapist.therapist_first_name,\n      therapist_last_name: therapist.therapist_last_name,\n    })\n    this.props.history.push('/therapist');\n  }\n\n  async getInfoAppointment(){\n    this.setState(prevState => ({\n      modalAppointment:!prevState.modalAppointment\n\n    }));\n  };\n\n  async createAppointment(e){\n    e.preventDefault();\n    const data = {\n      date: this.state.date,\n      time: this.state.time,\n      therapist_id:this.state.therapist_id,\n      therapist_image: this.state.therapist_image ,\n      user_id: 1,\n      therapist_first_name: this.state.therapist_first_name,\n      therapist_last_name: this.state.therapist_last_name\n    }\n    const appointment = await createUserAppointment(data)\n    this.setState({\n      date: '',\n      time: ''\n    })\n    this.props.history.push('/profile')\n    const appointments = await getUserAppointments();\n    this.setState({\n      appointments\n    })\n  }\n\n  async cancelAppointment(appointmentId){\n    try{\n      const resp = await deleteUserAppointment(appointmentId)\n      const appointments = await getUserAppointments();\n\n      this.setState({\n        appointments\n      })\n    }catch(e){\n      console.error(e.message);\n    }\n  }\n\n  async populateForm(appointment){\n    this.setState(prevState => ({\n      modalAppointment: !prevState.modalAppointment\n    }))\n    console.log(this.state.modalAppointment);\n    console.log(appointment);\n    try{\n    this.setState({\n      date: appointment.date,\n      time: appointment.time\n    })\n    }catch(e){\n      console.error(e.message);\n    }\n  }\n\n  async rescheduleAppointment(e){\n    e.preventDefault();\n    console.log('clicked, yeah babe!!!!');\n    const data = {\n      date: this.state.date,\n      time: this.state.time\n    }\n\n    await editUserAppointment(data)\n  }\n\n  handleCalendar(date){\n    this.setState(prevState => ({\n        ...prevState,\n        date\n    }))\n  }\n\n  async componentDidMount(){\n    await this.getAppointments();\n    await this.getAllTherapists();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route exact path ='/' render={(props) => (\n          <div>\n            <UserRegisterForm\n            {...props}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleRegister}\n              first_name={this.state.first_name}\n              last_name={this.state.last_name}\n              email={this.state.email}\n              password={this.state.password}\n              closeModal={this.toggleModal}/>\n          </div>\n        )} />\n\n        <Route exact path='/scheduleAppointment' render={(props) => (\n          <div>\n            <AppointmentForm\n            {...props}\n            handleChange={this.handleChange}\n            handleSubmit={this.createAppointment}\n            date={this.state.date}\n            time={this.state.time}\n            handleCalendar={this.handleCalendar}/>\n          </div>\n        )} />\n\n        <Route exact path='/login' render={(props) => (\n          <div>\n            <UserLoginForm\n              {...props}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleLogin}\n              email={this.state.email}\n              password={this.state.password}\n              closeModal={this.toggleModal}\n              isOpen={this.state.modalOpen}/>\n          </div>\n        )} />\n\n        <Route exact path='/profile' render={(props) => (\n          <div>\n            <UserProfile\n            appointments={this.state.appointments}\n            cancelAppointment={this.cancelAppointment}\n            populateForm={this.populateForm}\n            date={this.state.date}\n            time={this.state.time}\n            modalAppointment={this.state.modalAppointment}/>\n          </div>\n        )}/>\n        <Route exact path='/therapists' render={(props) => (\n          <div>\n            <TherapistList\n            getTherapist={this.getTherapist}\n            therapist={this.state.therapist}\n            therapists={this.state.therapists} />\n          </div>\n        )} />\n        <Route exact path='/therapist' render={(props) => (\n          <div>\n            <TherapistProfile\n            therapist={this.state.therapist}\n            getInfoAppointment={this.getInfoAppointment}\n            handleChange={this.handleChange}\n            handleSubmit={this.createAppointment}\n            date={this.state.date}\n            time={this.state.time}\n            handleCalendar={this.handleCalendar}\n            modalAppointment={this.state.modalAppointment}/>\n          </div>\n        )} />\n\n        <Modal\n          closeModal={this.toggleModal}\n          isOpen={this.state.modalOpen} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter (App);\n"]},"metadata":{},"sourceType":"module"}